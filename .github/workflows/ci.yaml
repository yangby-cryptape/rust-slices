name: CI
on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]
defaults:
  run:
    shell: bash
env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -F warnings
  RUST_BACKTRACE: full
  RUST_TOOLCHAIN: 1.53.0
  MSRV: 1.40.0
jobs:
  rustfmt:
    name: Checks / Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          components: rustfmt
      - name: Run
        run: cargo fmt --all -- --check
  clippy:
    name: Checks / Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          components: clippy
      - name: Run
        run: cargo clippy -- --deny warnings
  cargo-deny:
    name: Checks / Deny
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: CacheKey
        id: cache-key
        run: echo "::set-output name=yyyymm::$(/bin/date -u "+%Y%m")"
      - name: Cache
        id: cache-cargo-deny
        uses: actions/cache@v2
        with:
          path: ~/.cargo/bin/cargo-deny
          key: ${{ runner.os }}-${{ steps.cache-key.outputs.yyyymm }}
      - name: Setup
        if: steps.cache-cargo-deny.outputs.cache-hit != 'true'
        run: cargo deny --version || cargo install cargo-deny --locked
      - name: Run
        run: cargo deny check --hide-inclusion-graph --show-stats
  test:
    name: Tests / Build & Test
    needs: [ rustfmt, clippy ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
      fail-fast: true
      max-parallel: 3
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
      - name: Build
        run: cargo build --verbose --all
      - name: Test
        run: cargo test --verbose --all
  msrv:
    name: Tests / Build & Test (MSRV)
    needs: [ rustfmt, clippy ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.MSRV }}
          override: true
      - name: Build
        run: cargo build --verbose --all
      - name: Test
        run: cargo test --verbose --all
  success:
    name: Success
    if: ${{ success() }}
    needs: [ cargo-deny, test, msrv ]
    runs-on: ubuntu-latest
    steps:
      - name: Succeed
        run: exit 0
